// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "fiber@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/category": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Category Option",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Get Category Option",
                "parameters": [
                    {
                        "type": "boolean",
                        "name": "isAvailable",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "sortOrder",
                        "in": "query"
                    }
                ],
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create Category",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Create Category",
                "parameters": [
                    {
                        "description": "Payload to create",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/categorydto.CreateCategoryDTO"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Bulk Delete Categories",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Bulk Delete Categories",
                "parameters": [
                    {
                        "description": "Payload to bulk delete",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ArrayOfIdDTO"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/category/{categoryId}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Category",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Update Category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "categoryId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payload to update",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/categorydto.CreateCategoryDTO"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/export-all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Export All Database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Export"
                ],
                "summary": "Export Database",
                "responses": {}
            }
        },
        "/api/product": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Products list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Get Products list",
                "parameters": [
                    {
                        "type": "boolean",
                        "name": "isAvailable",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "sortOrder",
                        "in": "query"
                    }
                ],
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create Product",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Create Product",
                "parameters": [
                    {
                        "description": "Payload to create",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/productdto.CreateProductDTO"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Bulk Delete Products",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Bulk Delete Products",
                "parameters": [
                    {
                        "description": "Payload to bulk delete",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ArrayOfIdDTO"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/product/export-photos": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Export All Product Photos",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Export"
                ],
                "summary": "Export All Product Photos",
                "responses": {}
            }
        },
        "/api/product/stock": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Products Stock",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Update Products Stock",
                "parameters": [
                    {
                        "description": "Payload to update stock",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/productdto.UpdateProductStockDTO"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/product/{productId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Product Detail",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Get Product Detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product ID",
                        "name": "productId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Products",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Update Products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product ID",
                        "name": "productId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payload to update",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/productdto.UpdateProductDTO"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/questioner": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Questioner",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Questioner"
                ],
                "summary": "Get Questioner",
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create Questioner",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Questioner"
                ],
                "summary": "Create Questioner",
                "parameters": [
                    {
                        "description": "Payload to create",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/questionerdto.CreateQuestionerDTO"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/questioner/credits": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Credits list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Questioner"
                ],
                "summary": "Get Credits list",
                "responses": {}
            }
        },
        "/api/questioner/stats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Questioner Detail Stats",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Questioner"
                ],
                "summary": "Get Questioner Detail Stats",
                "responses": {}
            }
        },
        "/api/questioner/{questionerId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Questioner Detail",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Questioner"
                ],
                "summary": "Get Questioner Detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "questioner ID",
                        "name": "questionerId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/transaction": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Transaction list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Get Transaction list",
                "parameters": [
                    {
                        "type": "boolean",
                        "name": "isAvailable",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "sortOrder",
                        "in": "query"
                    }
                ],
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create Transaction",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Create Transaction",
                "parameters": [
                    {
                        "description": "Payload to create",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transactiondto.CreateTransactionDTO"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/transaction/summary": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Summary list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Get Summary list",
                "responses": {}
            }
        },
        "/api/user/login": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Login User",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Login User",
                "parameters": [
                    {
                        "description": "Payload to login",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userdto.LoginUserDTO"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/user/register": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Register User",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Register User",
                "parameters": [
                    {
                        "description": "Payload to create",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userdto.RegisterUserDTO"
                        }
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "categorydto.CreateCategoryDTO": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.ArrayOfIdDTO": {
            "type": "object",
            "properties": {
                "ids": {
                    "description": "Optional list of category IDs",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "productdto.CreateProductDTO": {
            "type": "object",
            "required": [
                "categoryID",
                "coverPhoto",
                "name"
            ],
            "properties": {
                "categoryID": {
                    "type": "string"
                },
                "coverPhoto": {
                    "type": "integer",
                    "maximum": 5,
                    "minimum": 1
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer",
                    "minimum": 1
                },
                "stock": {
                    "type": "integer",
                    "minimum": 0
                },
                "variants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/productdto.ProductVariantDTO"
                    }
                }
            }
        },
        "productdto.ProductVariantDTO": {
            "type": "object",
            "required": [
                "name",
                "price",
                "stock"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer",
                    "minimum": 1
                },
                "stock": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "productdto.UpdateProductDTO": {
            "type": "object",
            "required": [
                "categoryID",
                "coverPhoto",
                "name"
            ],
            "properties": {
                "categoryID": {
                    "type": "string"
                },
                "coverPhoto": {
                    "type": "integer",
                    "maximum": 5,
                    "minimum": 1
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer",
                    "minimum": 1
                },
                "stock": {
                    "type": "integer",
                    "minimum": 0
                },
                "variants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/productdto.ProductVariantDTO"
                    }
                }
            }
        },
        "productdto.UpdateProductStockDTO": {
            "type": "object",
            "required": [
                "productId",
                "stock"
            ],
            "properties": {
                "productId": {
                    "type": "string"
                },
                "stock": {
                    "type": "integer",
                    "minimum": 0
                },
                "variant": {
                    "type": "string"
                }
            }
        },
        "questionerdto.CreateQuestionerDTO": {
            "type": "object",
            "required": [
                "questioner1",
                "questioner10",
                "questioner2",
                "questioner3",
                "questioner4",
                "questioner5",
                "questioner6",
                "questioner7",
                "questioner8",
                "questioner9"
            ],
            "properties": {
                "instagram": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "questioner1": {
                    "type": "integer",
                    "maximum": 5,
                    "minimum": 1
                },
                "questioner10": {
                    "type": "integer",
                    "maximum": 5,
                    "minimum": 1
                },
                "questioner2": {
                    "type": "integer",
                    "maximum": 5,
                    "minimum": 1
                },
                "questioner3": {
                    "type": "integer",
                    "maximum": 5,
                    "minimum": 1
                },
                "questioner4": {
                    "type": "integer",
                    "maximum": 5,
                    "minimum": 1
                },
                "questioner5": {
                    "type": "integer",
                    "maximum": 5,
                    "minimum": 1
                },
                "questioner6": {
                    "type": "integer",
                    "maximum": 5,
                    "minimum": 1
                },
                "questioner7": {
                    "type": "integer",
                    "maximum": 5,
                    "minimum": 1
                },
                "questioner8": {
                    "type": "integer",
                    "maximum": 5,
                    "minimum": 1
                },
                "questioner9": {
                    "type": "integer",
                    "maximum": 5,
                    "minimum": 1
                }
            }
        },
        "transactiondto.CreateTransactionAttrDTO": {
            "type": "object",
            "required": [
                "productID",
                "quantity"
            ],
            "properties": {
                "productID": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer",
                    "minimum": 1
                },
                "variantName": {
                    "type": "string"
                }
            }
        },
        "transactiondto.CreateTransactionDTO": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/transactiondto.CreateTransactionAttrDTO"
                    }
                }
            }
        },
        "userdto.LoginUserDTO": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "userdto.RegisterUserDTO": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "storeID"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "phoneNumber": {
                    "type": "string"
                },
                "storeID": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Fiber Example API",
	Description:      "This is a sample swagger for Fiber",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
